// Weathremum visual & audial ambience actor classes.

// A base weather sound actor.
class W2SoundOrigin: Actor {
	SeqNode seq;
	//W2SoundKeeper keeper;

	Default {
		+NOINTERACTION; // Implies +NOGRAVITY and +NOBLOCKMAP.
		//+NOTONAUTOMAP;
	}

	override void Tick() {
		// No "Super.Tick()" is necessary.
	}

	override void OnDestroy() {
		StopSoundSequence();
		Super.OnDestroy();
	}
}


class Weathremum_Raindrop: Actor {
	W2LevelGeneralData w2level;
	W2SectorData w2sector;

	Default {
		+MISSILE;
		-SOLID;
		+NOBLOCKMAP;
		+NOTONAUTOMAP;
		+DONTSPLASH;
		+NOTELEPORT;
		Height 0;
		Radius 1;
		Mass 3;
		RenderStyle "Translucent";
	}

	override void BeginPlay() {
		ChangeStatNum( STAT_WEATHREMUM_MAINDECOR ); // 75.
		Super.BeginPlay();
	}

	override void PostBeginPlay() {
		//if ( !cursector || ( ceilingpic != skyflatnum ) )
		//	Destroy();

		double minspawnheight = ( master? min( ceilingz, target.pos.z + target.height + 192.0 ) : ceilingz );

		SetZ( minspawnheight - FRandom( 8.0, 25.0 ) );

		vel.z = -35.0;
		scale = ( FRandom( 0.1, 0.3 ), FRandom( 0.75, 2 ) );

		// It's assumed that alpha may be changed with CVar "mcm_weathremum_rainalphamul".
		alpha = clamp( w2level.raindropsAlphaMul * FRandom( 0.2, 0.7 ), 0.05, 1.0 );

		ClearInterpolation();
	}

	override void Tick() {
		if ( master && pos.z - master.pos.z < -256.0 ) {
			Destroy();
			return;
		}

		Super.Tick();
	}

	void RaindropPreSplash( void ) {
		//FindFloorCeiling();
		w2sector = w2level.GetSectorData( cursector );
		//w2sector = w2level.GetSectorData( Sector.PointInSector( pos.xy ) );
		EWeathremumSectorType w2type = ( w2sector? w2sector.w2type : W2ST_None );

		if ( w2type == W2ST_Water || w2type == W2ST_Nukage || w2type == W2ST_Incandecent ) {

			if ( w2sector.w2type == W2ST_Water ) {
				if ( target && Distance2D( target ) <= 448.0 && target.pos.z > pos.z - 64.0 ) {
					for ( int i = 0; i < 3; i++ )
						Actor.Spawn( "Weathremum_WaterRipple", pos + ( FRandom( -7.0, 7.0 ), FRandom( -7.0, 7.0 ), 0.0 ) );
				}

			} else if ( !Random( 0, 7 ) ) {
				if ( w2sector.w2type == W2ST_Incandecent || !Random( 0, 3 ) )
					Actor.Spawn( "Weathremum_NukageVapor", pos + ( 0.0, 0.0, 5.0 ) );
			}

			Destroy();
			return;
		}

		vel = (0, 0, 0);
		scale.y = 0.75;
		alpha *= 0.4;

		frame = Random( 1, 2 );
		//tics = frame; //Random( 2, 3 );

		SetZ( floorz );
		ClearInterpolation();

		bCORPSE = true;

		// Optimizing out raindrop splashes on the static surfaces:
		if ( ( cursector.floordata is 'Mover' ) )
			bMOVEWITHSECTOR = true;
	}

	void RaindropSplash( void ) {
		if ( target.pos.z < pos.z - 64.0 ) {
			Destroy();
			return;
		}

		if ( w2sector && ( w2sector.w2type == W2ST_RockSurface || w2sector.w2type == W2ST_MetalSurface ) ) {
			Actor.Spawn( "Weathremum_HardSurfaceRaindropBreak", pos + ( FRandom( -4.0, 4.0 ), FRandom( -4.0, 4.0 ), 0.0 ) );

			Destroy();
			return;
		}

		//ChangeStatNum( STAT_WEATHREMUM_EXTRADECOR ); // Not works.
		vel = (0.0, 0.0, 0.0);

		bFLATSPRITE = bROLLSPRITE = bFLOORCLIP = true;

		// General visual tweaks:
		ClearInterpolation();
		A_SetRenderStyle( 0.1, STYLE_Add );
		scale = ( 1.0, 1.0 ) * FRandom( 0.1, 0.25 );
		frame = Random( 0, 4 );

		// Setting the position on a slopes:
		if ( cursector.floorplane.isSlope() ) {
			vector3 norm = cursector.floorplane.normal;
			vector2 norm_p1 = ( norm.x != 0 || norm.y != 0 )? (norm.x, norm.y).Unit() : (0, 0);
			vector2 norm_p2 = ((norm.x, norm.y).Length(), norm.z);

			angle = atan2( norm_p1.y, norm_p1.x );
			pitch = atan2( norm_p2.x, norm_p2.y );
		}

		roll = FRandom( 0.0, 360.0 );
	}

	States {
	Spawn:
		RAIN A -1;
		Stop;
	Death:
		RAIN "#" 0 RaindropPreSplash();
		RAIN "#" 2 { frame++; tics = 5 - frame; }
		RAIN "#" 2 { frame++; }
		RWIN "#" 0 {
			if ( ( level.maptime & 1 ) || ( target && Distance2D( target ) > 512.0 ) )
				Destroy();
			else
				RaindropSplash();
		}
		RWIN "#" 1 A_FadeOut( 0.005 );
		Wait;
	}
} // of class Weathremum_Raindrop: Actor {}

class Weathremum_CanopyRaindrop: Weathremum_Raindrop {
	int dropCountdown;

	override void PostBeginPlay() {
		vel.z = 0.0;
		scale = ( FRandom( 0.1, 0.5 ), FRandom( 0.2, 0.5 ) );
		alpha = clamp( w2level.raindropsAlphaMul * FRandom( 0.3, 0.7 ), 0.075, 1.0 );
		dropCountdown = Random( 1, 3 );
	}

	override void Tick() {
		if ( !bCORPSE && !globalfreeze && !level.frozen ) {
			if ( dropCountdown > 0 ) {
				dropCountdown--;

				scale.y *= 1.02;
			} else {
				if ( vel.z > -35.0 )
					vel.z -= 1.5;

				scale.y *= 1.1;
				vel.xy *= 0.9;
			}

			if ( scale.x > 0.2 )
				scale.x *= 0.95;
		}

		Super.Tick();
	}

	States {
	Death:
		RAIN "#" 1 RaindropPreSplash();
		RAIN "##" 1 { frame++; }
		RWIN "#" 0 {
			if ( target && Distance2D( target ) > 512.0 )
				Destroy();
			else
				RaindropSplash();
		}
		RWIN "#" 1 A_FadeOut( 0.005 );
		Wait;
	}
}

class Weathremum_SkyboxRaindrop: W2DynamicSkyActor {
	W2LevelGeneralData w2level;

	Default {
		+NOBLOCKMAP;
		+NOINTERACTION;
		+NOTONAUTOMAP;
		+DONTSPLASH;
		Height 0;
		Radius 1;
		RenderStyle "Translucent";
	}

	override void PostBeginPlay() {
		vel.z = -35.0;
		scale = 0.33 * ( FRandom( 0.1, 0.3 ), FRandom( 0.75, 2 ) );
		alpha = clamp( w2level.raindropsAlphaMul * FRandom( 0.4, 0.8 ), 0.075, 1.0 );

		ClearInterpolation();
	}

	override void Tick() {
		if ( level.frozen || globalfreeze )
			return;

		AddZ( vel.z );

		if ( curState.tics != -1 ) {
			if ( --tics <= 0 )
				SetState( curState.nextState );
		}

		//Super.Tick();
	}

	States {
	Spawn:
		RAIN N 5;
		Stop;
	}
} // of class Weathremum_SkyboxRaindrop: Weathremum_Raindrop {}



class Weathremum_WaterRipple: Actor {
	Default {
		+NOTONAUTOMAP;
		+NOINTERACTION;
		+FLATSPRITE;
		+FLOORCLIP;
		RenderStyle "Translucent";
		Radius 0;
		Height 0;
	}

	override void BeginPlay() {
		ChangeStatNum( STAT_WEATHREMUM_EXTRADECOR );
		Super.BeginPlay();
	}

	override void PostBeginPlay() {
		frame = Random( 0, 3 );
		alpha = FRandom( 0.095, 0.35 );
		scale.x = scale.y = FRandom( 0.04, 0.1 );
	}

	override void Tick() {
		if ( !globalfreeze && !level.frozen ) {
			//Super.Tick();

			if ( ++frame > 11 ) // 22
				Destroy();

			A_FadeOut( 0.02 );
		}
	}

	States {
	Spawn:
		WRPL "#" 2;
		Stop;
	}
}

class Weathremum_HardSurfaceRaindropBreak: Actor {
	Default {
		+NOTONAUTOMAP;
		+NOINTERACTION;
		+FLATSPRITE;
		+FLOORCLIP;
		RenderStyle "Translucent";
	}

	override void BeginPlay() {
		ChangeStatNum( STAT_WEATHREMUM_EXTRADECOR );
		Super.BeginPlay();
	}

	override void PostBeginPlay() {
		frame = Random( 0, 3 );
		alpha = FRandom( 0.5, 1.0 );
		scale.x = scale.y = FRandom( 0.175, 0.45 );
	}

	override void Tick() {
		if ( !globalfreeze && !level.frozen ) {
			frame = ( frame + 1 ) % 4;
			A_FadeOut( 0.175 );
		}
	}

	States {
	Spawn:
		RRPL "#" -1;
		Stop;
	}	
}

class Weathremum_NukageVapor: Actor {
	Default {
		+NOTONAUTOMAP;
		+NOINTERACTION;
		RenderStyle "Translucent";
		Radius 0;
		Height 0;
	}

	override void BeginPlay() {
		ChangeStatNum( STAT_WEATHREMUM_EXTRADECOR );
		Super.BeginPlay();
	}

	override void PostBeginPlay() {
		vel.z = FRandom( 0.0, 5.0 );
		alpha = FRandom( 0.075, 0.33 );
		scale.x = scale.y = FRandom( 0.1, 0.23 );
		scale.x *= FRandomPick( -1.0, 1.0 );
	}

	States {
	Spawn:
		RAIS ABCDEFGHIJKL 1 A_FadeOut( 0.02 );
		Stop;
	}
}
